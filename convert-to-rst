#!/usr/bin/env python

import glob
import subprocess
import re
import sys

target_index = 0

def writefile(filename_part, text):
    global target_index
    target_index += 1
    with open("en/%s-%d.xml" % (filename_part, target_index), 'w') as f:
        f.write(text)

for filename in glob.glob('en/ch*.xml'):
    target_index = 0
    m = re.search('en/ch\d+-(.*).xml', filename)
    if not m:
        continue
    filename_part = m.group(1)

    #Replace references
    with open(filename, 'r') as f:
        text = f.read()
        matches = re.finditer('<xref\s*linkend="(.*?)"/>', text, re.MULTILINE)
        for m in matches:
            text = text.replace(m.group(0), m.group(1) + '_')
    writefile(filename_part, text)

    #Replace reference targets
    matches = re.finditer('<(.*?)id="(.*?)"(.*?)>', text)
    for m in matches:
        if any([m.group(2).startswith(x) for x in ['sec:']]):
            text = text.replace(m.group(0), '<%s%s>\n.. _%s:\n\n' % (m.group(1), m.group(3), m.group(2)))
    writefile(filename_part, text)

    #Replace examples
    matches = re.finditer('\s*&interaction.(.*?);', text)
    for m in matches:
        text = text.replace(m.group(0), ".. include:: examples/results/%s.lxo" % m.group(1))
    writefile(filename_part, text)

    subprocess.call("pandoc -f docbook -t rst -s en/%s-%d.xml -o en/%s.rst" % (filename_part, target_index, filename_part), shell=True)

    #Some of the earlier converted RST parts aren't very clean, fix those up
    with open('en/%s.rst' % filename_part, 'r') as f:
        text = f.read()

    #Replace target of a reference (get rid of the backslash)
    matches = re.finditer('\.\. \\\\(.*)', text)
    for m in matches:
        text = text.replace(m.group(0), '.. %s\n\n' % m.group(1))

    #Replace reference (get rid of the backslash)
    matches = re.finditer('([^\s]*):([^\s]*):([^\s]*)\\\\_', text)
    for m in matches:
        text = text.replace(m.group(0), '%s:%s:%s_' % (m.group(1), m.group(2), m.group(3)))

    #Remove newlines from Mercurial commands
    matches = re.finditer('``(.*?)``', text, re.MULTILINE | re.DOTALL)
    for m in matches:
        if '\n' in m.group(0):
            text = text.replace(m.group(0), re.sub('\s+', ' ', m.group(0)))

    with open('en/%s.rst' % filename_part, 'w') as f:
        f.write(text)
